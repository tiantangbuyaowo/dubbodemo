<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.1.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- 时间统一处理 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="customObjectMapper" class="org.tj.dubbo.web.util.CustomObjectMapper"></bean>
	<!-- 时间统一处理 -->


	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">

		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<!-- 解决响应文本乱码问题 -->
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
				<!-- <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
					<property name="objectMapper" value="#{jsonUtil.mapper}"/> <property name="supportedMediaTypes"> 
					<list> <value>text/json;charset=UTF-8</value> </list> </property> </bean> -->
			</list>
		</property>
	</bean>


	<!-- springmvc拦截器开始 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="org.tj.dubbo.web.interceptor.PrivilegeInterceptor" />
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	<!-- springmvc拦截器结束 -->


	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>
	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->



	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="0" />
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- <bean id="exceptionResolver" class="net.ewide.servermonitor.handler.ExceptionHandler" 
		/> -->
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="org.tj.dubbo.web.**.controller" />

</beans>